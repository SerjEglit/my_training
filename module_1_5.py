# module_1_5.py (1 вариант)

# 1. Задание переменной immutable_var (неизменяемый кортеж)
immutable_var = (1, 2, 'a', 'b')

# Выводим кортеж на экран
print("Immutable tuple:", immutable_var)

# 2. Попытка изменить элементы кортежа
# Пример попытки изменения (будет ошибка)
try:
    immutable_var[0] = 10
    # Попытка изменить первый элемент
except TypeError as e:
    print("Ошибка при попытке изменить кортеж:", e)

# 3. Создание изменяемой структуры данных (список)
mutable_list = [1, 2, 'a', 'b']

# Изменяем элементы списка
mutable_list[0] = 10  # Изменяем первый элемент
mutable_list.append('Modified')  # Добавляем новый элемент в конец

# Выводим измененный список на экран
print("Mutable list:", mutable_list)

#Объяснение кода:
#Неизменяемый кортеж:
#Мы создаем переменную immutable_var, которая является кортежем с элементами разных типов.
#Мы выводим кортеж на экран с помощью функции print().
#Мы пытаемся изменить первый элемент кортежа (immutable_var[0] = 10), что вызывает ошибку, потому что кортежи — это неизменяемые объекты в Python. При попытке изменения возникает исключение TypeError, которое мы ловим и выводим на экран.
#Изменяемый список:
#Мы создаем переменную mutable_list, которая является списком. Списки — это изменяемые объекты.
#Мы изменяем первый элемент списка и добавляем новый элемент с помощью метода append().
#После этого выводим измененный список на экран.

# module_1_5.py (2 вариант)

# 1. Создание неизменяемого объекта (кортеж)
# Создаем кортеж, состоящий из разных типов данных (целое число, строка, список)
immutable_var = (42, "Hello", [1, 2, 3])

# Выводим кортеж
print("Неизменяемый кортеж:", immutable_var)

# Попытка изменить элемент кортежа
try:
    immutable_var[1] = "World"
    # Попытка изменения строки
except TypeError as error:
    print("Ошибка: Невозможно изменить элемент кортежа:", error)

# 2. Создание изменяемой структуры данных (список)
# Создаем список, который может быть изменен
mutable_list = [10, "Python", 3.14, "OpenAI"]

# Выводим исходный список
print("Исходный изменяемый список:", mutable_list)

# Изменяем элементы списка
mutable_list[0] = 100  # Изменяем первый элемент
mutable_list[2] = 3.14159  # Изменяем элемент с плавающей точкой

# Добавляем новый элемент в конец списка
mutable_list.append("New Element")

# Выводим измененный список
print("Измененный список:", mutable_list)

# 3. Сравнение элементов
# Добавим в кортеж новый элемент (нельзя изменить существующий элемент, но можно добавить новый)
new_immutable_var = immutable_var + ("New Item",)

# Выводим новый кортеж
print("Новый кортеж с добавленным элементом:", new_immutable_var)

# Сравнение изменяемого и неизменяемого объектов
print("Результат сравнения изменяемого и неизменяемого объекта:", mutable_list == new_immutable_var)

#Важные моменты:
#Неизменяемые объекты: мы показали, что невозможно изменять элементы кортежа, но можно создать новый кортеж, добавив в него новый элемент.
#Изменяемые объекты: продемонстрировали работу со списком, который позволяет изменять элементы и добавлять новые.
#Сравнение объектов: список и кортеж сравниваются как разные типы данных, и результат их сравнения возвращает False.