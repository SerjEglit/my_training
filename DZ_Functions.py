# –ó–∞–¥–∞—á–∞: –°–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–∫–∏ –ø—Ä–æ—Å—Ç—ã—Ö –∏ –Ω–µ –ø—Ä–æ—Å—Ç—ã—Ö —á–∏—Å–µ–ª –∏–∑ numbers

def get_matrix(n, m, value):
    """
    –°–æ–∑–¥–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—É (–≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫) —Ä–∞–∑–º–µ—Ä–æ–≤ n x m, –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ value.

    :param n: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –º–∞—Ç—Ä–∏—Ü—ã
    :param m: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã
    :param value: –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –º–∞—Ç—Ä–∏—Ü–∞
    :return: –í–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ (–º–∞—Ç—Ä–∏—Ü–∞)
    """
    # üü¶ –ü—É—Å—Ç–∞—è –º–∞—Ç—Ä–∏—Ü–∞
    matrix = []

    # üîÑ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –º–∞—Ç—Ä–∏—Ü—ã
    for _ in range(n):
        row = []  # üîß –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É
        for _ in range(m):
            row.append(value)  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º value
        matrix.append(row)  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Ç—Ä–∏—Ü—É

    return matrix

# üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
result1 = get_matrix(2, 2, 10)
result2 = get_matrix(3, 5, 42)
result3 = get_matrix(4, 2, 13)

# üåü –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
print(result1)  # [[10, 10], [10, 10]]
print(result2)  # [[42, 42, 42, 42, 42], [42, 42, 42, 42, 42], [42, 42, 42, 42, 42]]
print(result3)  # [[13, 13], [13, 13], [13, 13], [13, 13]]
